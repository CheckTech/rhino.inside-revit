# Site settings ===============================================================
# site title, and description
title: Rhino.InsideÂ®.Revit
description: Wiki, Guides, Samples, and Documentation for Rhino.Inside.Revit

# site logo file
logo: static/images/rir-logo-50x50.png

# urls
baseurl: "" # the subpath of your site, e.g. /blog/
url: "" # the base hostname & protocol for your site

# github info
github_username:  mcneel
repo_url: "https://github.com/mcneel/rhino.inside-revit/"
editme_github_base_url: "blob/docs/cleanup/docs/"

# forum url
forum_url: "https://discourse.mcneel.com/c/rhino-inside/Revit"

# copyright notice (copyright year is dynamic)
copyright: Robert McNeel & Associates. All Rights Reserved.

# site default version and langauge
version: beta
language: en

# DO NOT CHANGE UNLESS YOU KNOW WHAT YOU ARE DOING ============================
# Ruby and Jekyll Settings
gems:
  - jekyll-sitemap

# Build settings
safe: false
encoding: utf-8
# If we decide that we want to use kramdown over redcarpet, syntax
# highlighting is performed by turning on the following options and
# including/running highlight.js (https://highlightjs.org/) at the
# top of pages that need it (probably just add to head.html)
#markdown: redcarpet
markdown: kramdown
kramdown:
  input: GFM
collections_dir: pages
simple_search: http://google.com/search
# =============================================================================

# site collections (various languages)
collections:
  en:
    output: true
    permalink: /en/:path

# default metadata for pages based on their path
defaults:
  # default layout for all pages
  - scope:
      path: ""
    values:
      layout: page-list-toc

  # set base metadata for all pages in each collection
  - scope:
      path: ""
      type: en
    values:
      language: en
      authors: ['scott_davidson']

  # set version on pages based on their path
  - scope:
      path: "pages/*/beta"
    values:
      version: beta

  - scope:
      path: "pages/*/1.0"
    values:
      version: 1.0

  # set category on pages based on their path
  - scope:
      path: "pages/*/*/guides"
    values:
      categories: ['guides']

  - scope:
      path: "pages/*/*/reference"
    values:
      categories: ['reference']

  - scope:
      path: "pages/*/*/samples"
    values:
      categories: ['samples']
